{# Template Validation and Testing Framework #}

{# Main validation function - validates complete data structure #}
{% macro validate_report_data(patient, microbiome, config, metadata) %}
    {% set validation_results = {
        'valid': true,
        'errors': [],
        'warnings': [],
        'info': []
    } %}
    
    {# Validate patient data #}
    {% set patient_errors = validate_patient_data(patient) %}
    {% if patient_errors %}
        {% set _ = validation_results.errors.extend(patient_errors) %}
        {% set _ = validation_results.update({'valid': false}) %}
    {% endif %}
    
    {# Validate microbiome data #}
    {% set microbiome_errors = validate_microbiome_data(microbiome) %}
    {% if microbiome_errors %}
        {% set _ = validation_results.errors.extend(microbiome_errors) %}
        {% set _ = validation_results.update({'valid': false}) %}
    {% endif %}
    
    {# Validate configuration #}
    {% set config_warnings = validate_config_data(config) %}
    {% if config_warnings %}
        {% set _ = validation_results.warnings.extend(config_warnings) %}
    {% endif %}
    
    {# Validate metadata #}
    {% set metadata_info = validate_metadata(metadata) %}
    {% if metadata_info %}
        {% set _ = validation_results.info.extend(metadata_info) %}
    {% endif %}
    
    {{ validation_results }}
{% endmacro %}

{# Patient data validation #}
{% macro validate_patient_data(patient) %}
    {% set errors = [] %}
    
    {# Required fields #}
    {% if not patient or not patient.name or patient.name.strip() == "" %}
        {% set _ = errors.append("Patient name is required and cannot be empty") %}
    {% endif %}
    
    {% if not patient.sample_number or patient.sample_number.strip() == "" %}
        {% set _ = errors.append("Sample number is required and cannot be empty") %}
    {% endif %}
    
    {% if not patient.performed_by or patient.performed_by.strip() == "" %}
        {% set _ = errors.append("Performed by field is required") %}
    {% endif %}
    
    {% if not patient.requested_by or patient.requested_by.strip() == "" %}
        {% set _ = errors.append("Requested by field is required") %}
    {% endif %}
    
    {# Date format validation #}
    {% if patient.date_received and patient.date_received == "Unknown" %}
        {% set _ = errors.append("Date received should be properly formatted") %}
    {% endif %}
    
    {% if patient.date_analyzed and patient.date_analyzed == "Unknown" %}
        {% set _ = errors.append("Date analyzed should be properly formatted") %}
    {% endif %}
    
    {{ errors }}
{% endmacro %}

{# Microbiome data validation #}
{% macro validate_microbiome_data(microbiome) %}
    {% set errors = [] %}
    
    {# Required fields #}
    {% if not microbiome %}
        {% set _ = errors.append("Microbiome data is required") %}
        {{ errors }}
    {% endif %}
    
    {% if not microbiome.species_list or microbiome.species_list|length == 0 %}
        {% set _ = errors.append("Species list cannot be empty") %}
    {% else %}
        {# Validate species data structure #}
        {% for species in microbiome.species_list[:5] %}
            {% if not species.name %}
                {% set _ = errors.append("Species name is required for all entries") %}
            {% endif %}
            {% if species.percentage is not defined or species.percentage < 0 %}
                {% set _ = errors.append("Valid percentage is required for all species") %}
            {% endif %}
        {% endfor %}
    {% endif %}
    
    {% if not microbiome.phylum_distribution or microbiome.phylum_distribution|length == 0 %}
        {% set _ = errors.append("Phylum distribution data is required") %}
    {% endif %}
    
    {% if microbiome.dysbiosis_index is not defined %}
        {% set _ = errors.append("Dysbiosis index is required") %}
    {% elif microbiome.dysbiosis_index < 0 %}
        {% set _ = errors.append("Dysbiosis index must be non-negative") %}
    {% endif %}
    
    {% if not microbiome.dysbiosis_category %}
        {% set _ = errors.append("Dysbiosis category is required") %}
    {% elif microbiome.dysbiosis_category not in ['normal', 'mild', 'severe'] %}
        {% set _ = errors.append("Dysbiosis category must be 'normal', 'mild', or 'severe'") %}
    {% endif %}
    
    {% if microbiome.total_species_count is not defined or microbiome.total_species_count <= 0 %}
        {% set _ = errors.append("Total species count must be a positive integer") %}
    {% endif %}
    
    {{ errors }}
{% endmacro %}

{# Configuration validation #}
{% macro validate_config_data(config) %}
    {% set warnings = [] %}
    
    {% if not config %}
        {% set _ = warnings.append("Configuration data is missing - using defaults") %}
        {{ warnings }}
    {% endif %}
    
    {% if not config.reference_ranges %}
        {% set _ = warnings.append("Reference ranges not configured - phylum analysis may be limited") %}
    {% endif %}
    
    {% if not config.assets_path %}
        {% set _ = warnings.append("Assets path not configured - logos and images may not display") %}
    {% endif %}
    
    {{ warnings }}
{% endmacro %}

{# Metadata validation #}
{% macro validate_metadata(metadata) %}
    {% set info = [] %}
    
    {% if not metadata %}
        {% set _ = info.append("No metadata provided - using defaults") %}
        {{ info }}
    {% endif %}
    
    {% if metadata.language not in ['en', 'pl', 'jp'] %}
        {% set _ = info.append("Language '" + (metadata.language or "unknown") + "' may not be fully supported") %}
    {% endif %}
    
    {% set _ = info.append("Template validation completed for language: " + (metadata.language or "en")) %}
    
    {{ info }}
{% endmacro %}

{# Data quality checks #}
{% macro check_data_quality(microbiome) %}
    {% set quality_issues = [] %}
    
    {# Check for unusual phylum distributions #}
    {% if microbiome.phylum_distribution %}
        {% set total_percentage = microbiome.phylum_distribution.values()|sum %}
        {% if total_percentage < 90 or total_percentage > 110 %}
            {% set _ = quality_issues.append("Phylum percentages sum to " + "%.1f"|format(total_percentage) + "% - should be close to 100%") %}
        {% endif %}
    {% endif %}
    
    {# Check for very low diversity #}
    {% if microbiome.species_list and microbiome.species_list|length < 10 %}
        {% set _ = quality_issues.append("Low species diversity detected (" + microbiome.species_list|length|string + " species) - may indicate sample quality issues") %}
    {% endif %}
    
    {# Check for extremely high dysbiosis #}
    {% if microbiome.dysbiosis_index > 100 %}
        {% set _ = quality_issues.append("Extremely high dysbiosis index (" + "%.1f"|format(microbiosis.dysbiosis_index) + ") - verify calculation") %}
    {% endif %}
    
    {{ quality_issues }}
{% endmacro %}

{# Template rendering test #}
{% macro test_template_rendering(template_name, data) %}
    {% set test_results = {
        'template': template_name,
        'success': false,
        'errors': [],
        'warnings': []
    } %}
    
    {% try %}
        {# Attempt to include the template #}
        {% include template_name %}
        {% set _ = test_results.update({'success': true}) %}
    {% catch %}
        {% set _ = test_results.errors.append("Template '" + template_name + "' failed to render") %}
    {% endtry %}
    
    {{ test_results }}
{% endmacro %}

{# Generate validation report #}
{% macro generate_validation_report(validation_results) %}
<div class="validation-report">
    <h3>Template Validation Report</h3>
    
    {% if validation_results.valid %}
        <div class="validation-success">
            <strong>✅ Validation Passed</strong>
            <p>All required data is present and valid.</p>
        </div>
    {% else %}
        <div class="validation-failure">
            <strong>❌ Validation Failed</strong>
            <p>{{ validation_results.errors|length }} error(s) found:</p>
            <ul>
                {% for error in validation_results.errors %}
                <li class="error">{{ error }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
    
    {% if validation_results.warnings %}
        <div class="validation-warnings">
            <strong>⚠️ Warnings ({{ validation_results.warnings|length }}):</strong>
            <ul>
                {% for warning in validation_results.warnings %}
                <li class="warning">{{ warning }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
    
    {% if validation_results.info %}
        <div class="validation-info">
            <strong>ℹ️ Information:</strong>
            <ul>
                {% for info in validation_results.info %}
                <li class="info">{{ info }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
</div>
{% endmacro %}